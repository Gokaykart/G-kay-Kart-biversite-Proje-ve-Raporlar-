# encoding: utf-8
# 2019 R2
SetScriptVersion(Version="19.4.159")
template1 = GetTemplate(
    TemplateName="Steady-State Thermal",
    Solver="ANSYS")
system1 = template1.CreateSystem()
EngData.EnableFilter(Enable=False)
EngData.EnableFilter()
engineeringData1 = system1.GetContainer(ComponentName="Engineering Data")
matl1 = engineeringData1.CreateMaterial(Name="ZnCO2")
matlProp1 = matl1.CreateProperty(
    Name="Thermal Conductivity",
    Behavior="Isotropic",
    Qualifiers={"Definition": "", "Behavior": "Isotropic"})
EngData.EnableFilter(Enable=False)
EngData.EnableFilter()
EngData.EnableFilter(Enable=False)
EngData.EnableFilter()
EngData.EnableFilter(Enable=False)
matlProp2 = matl1.CreateProperty(
    Name="Density",
    Qualifiers={"Definition": "", "Behavior": ""})
matlProp3 = matl1.CreateProperty(
    Name="Coefficient of Thermal Expansion",
    Definition="Secant",
    Behavior="Isotropic",
    Qualifiers={"Definition": "Secant", "Behavior": "Isotropic"})
matlProp2.SetData(
    Index=-1,
    Variables=["Density"],
    Values=[["4430 [kg m^-3]"]])
matlProp3.SetVariableProperty(
    SheetName="Coefficient of Thermal Expansion",
    SheetQualifiers={"Definition": "Secant", "Behavior": "Isotropic"},
    VariableName="Coefficient of Thermal Expansion",
    Property="Unit",
    Value="K^-1")
matlProp1.SetVariableProperty(
    VariableName="Thermal Conductivity",
    Property="Unit",
    Value="W m^-1 K^-1")
matlProp1.SetData(
    Index=-1,
    Variables=["Thermal Conductivity"],
    Values=[["2 [W m^-1 K^-1]"]])
matlProp1.SetData(
    Variables=["Thermal Conductivity"],
    Values=[["2.036 [W m^-1 K^-1]"]])
matlProp3.SetData(
    SheetName="Coefficient of Thermal Expansion",
    SheetQualifiers={"Definition": "Secant", "Behavior": "Isotropic"},
    Index=-1,
    Variables=["Coefficient of Thermal Expansion"],
    Values=[["7.11E-06 [K^-1]"]])
EngData.EnableFilter()
EngData.EnableFilter(Enable=False)
material1 = engineeringData1.GetMaterial(Name="Structural Steel")
matlProp4 = material1.GetProperty(Name="Density")
matlProp4.SetData(
    Variables=["Density"],
    Values=[["7800 [kg m^-3]"]])
matlProp5 = material1.GetProperty(Name="Coefficient of Thermal Expansion")
matlProp5.SetVariableProperty(
    SheetName="Coefficient of Thermal Expansion",
    SheetQualifiers={"Definition": "Secant", "Behavior": "Isotropic"},
    VariableName="Coefficient of Thermal Expansion",
    Property="Unit",
    Value="K^-1")
matlProp5.SetData(
    SheetName="Coefficient of Thermal Expansion",
    SheetQualifiers={"Definition": "Secant", "Behavior": "Isotropic"},
    Variables=["Coefficient of Thermal Expansion"],
    Values=[["1.2E-05 [K^-1]"]])
matlProp6 = material1.GetProperty(Name="Thermal Conductivity")
matlProp6.SetVariableProperty(
    VariableName="Thermal Conductivity",
    Property="Unit",
    Value="W m^-1 K^-1")
matlProp6.SetData(
    Variables=["Thermal Conductivity"],
    Values=[["60.5 [W m^-1 K^-1]"]])
EngData.EnableFilter()
EngData.EnableFilter(Enable=False)
matlProp7 = matl1.CreateProperty(
    Name="Elasticity",
    Behavior="Isotropic",
    Qualifiers={"Definition": "", "Behavior": "Isotropic"})
matlProp7.SetData(
    Index=-1,
    Variables=["Young's Modulus"],
    Values=[["117000000000 [Pa]"]])
matlProp7.SetData(
    Variables=["Poisson's Ratio"],
    Values=[["0.25"]])
geometry1 = system1.GetContainer(ComponentName="Geometry")
geometry1.Edit(IsSpaceClaimGeometry=True)
geometry1.Exit()
geometry1.Edit()
Save(Overwrite=True)
geometry1.Exit()
modelComponent1 = system1.GetComponent(Name="Model")
modelComponent1.Refresh()
model1 = system1.GetContainer(ComponentName="Model")
model1.Edit()
model1.Exit()
model1.Edit()
Save(Overwrite=True)
model1.Exit()
modelComponent1.Update(AllDependencies=True)
template2 = GetTemplate(
    TemplateName="Static Structural",
    Solver="ANSYS")
engineeringDataComponent1 = system1.GetComponent(Name="Engineering Data")
geometryComponent1 = system1.GetComponent(Name="Geometry")
solutionComponent1 = system1.GetComponent(Name="Solution")
componentTemplate1 = GetComponentTemplate(Name="SimulationSetupCellTemplate_StructuralStaticANSYS")
system2 = template2.CreateSystem(
    ComponentsToShare=[engineeringDataComponent1, geometryComponent1, modelComponent1],
    DataTransferFrom=[Set(FromComponent=solutionComponent1, TransferName=None, ToComponentTemplate=componentTemplate1)],
    Position="Right",
    RelativeTo=system1)
model1.Edit()
Save(Overwrite=True)
